name: CMake Build Matrix
on:
  push:
    branches:
        - '**'

jobs:
  build:

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    defaults:
      run:
        shell: ${{ matrix.config.shell }}

    strategy:
      fail-fast: false

      matrix:
        config:
        - {
            name: "Windows",
            os: windows-latest,
            shell: "msys2 {0}",
            artifact: "Release-Windows"
          }
        - {
            name: "Ubuntu",
            os: ubuntu-latest,
            shell: "sh",
            artifact: "Release-Linux",
          }
    steps:
      - name: Setup Windows dependencies
        if: startsWith(matrix.config.os, 'Windows')
        uses: msys2/setup-msys2@v2
        with:
            install: >-
                git
                mingw-w64-x86_64-cmake
                mingw-w64-x86_64-ninja
                mingw-w64-x86_64-gcc
                mingw-w64-x86_64-mesa
                gawk
      - name: Setup CMake
        if: startsWith(matrix.config.name, 'Ubuntu')
        uses: jwlawson/actions-setup-cmake@v2
      - name: Setup Ubuntu dependencies
        if: startsWith(matrix.config.name, 'Ubuntu')
        run: |
          sudo apt-get update
          sudo apt install libegl1-mesa-dev libglu1-mesa-dev libasound2-dev libpulse-dev libxext-dev ninja-build build-essential mawk -y
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: Configure
        run: |
          mkdir Build
          cmake \
            -B Build \
            -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \
            -DCMAKE_BUILD_TYPE=Release \
            -DENABLE_PVS_STUDIO_ANALYZER=OFF \
            -G Ninja \
      - name: Build
        run: cmake --build Build --parallel
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.artifact }}
          path: Build/bin/
